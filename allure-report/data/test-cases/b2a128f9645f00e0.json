{"uid":"b2a128f9645f00e0","name":"test_login_wrong_pws_manytime","fullName":"tests.test_login.TestLogin#test_login_wrong_pws_manytime","historyId":"4e96d6e7442c6f05e9317ee924afd076","time":{"start":1721026670739,"stop":1721026670739,"duration":0},"description":"\n        System shows message when user enters wrong password many times.\n        :return:\n        ","descriptionHtml":"<pre><code>    System shows message when user enters wrong password many times.\n    :return:\n</code></pre>\n","status":"broken","statusMessage":"selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//div[@id=\"menu\"]//li//a[span[text()='Login']]\"}\n  (Session info: chrome=126.0.6478.127); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x00007FF76958EEA2+31554]\n\t(No symbol) [0x00007FF769507ED9]\n\t(No symbol) [0x00007FF7693C872A]\n\t(No symbol) [0x00007FF769418434]\n\t(No symbol) [0x00007FF76941853C]\n\t(No symbol) [0x00007FF76945F6A7]\n\t(No symbol) [0x00007FF76943D06F]\n\t(No symbol) [0x00007FF76945C977]\n\t(No symbol) [0x00007FF76943CDD3]\n\t(No symbol) [0x00007FF76940A33B]\n\t(No symbol) [0x00007FF76940AED1]\n\tGetHandleVerifier [0x00007FF769898B1D+3217341]\n\tGetHandleVerifier [0x00007FF7698E5AE3+3532675]\n\tGetHandleVerifier [0x00007FF7698DB0E0+3489152]\n\tGetHandleVerifier [0x00007FF76963E776+750614]\n\t(No symbol) [0x00007FF76951375F]\n\t(No symbol) [0x00007FF76950EB14]\n\t(No symbol) [0x00007FF76950ECA2]\n\t(No symbol) [0x00007FF7694FE16F]\n\tBaseThreadInitThunk [0x00007FFA0949257D+29]\n\tRtlUserThreadStart [0x00007FFA0A60AF28+40]","statusTrace":"self = <tests.test_login.TestLogin object at 0x0000017FF13E4C90>\n\n    def test_login_wrong_pws_manytime(self):\n        '''\n        System shows message when user enters wrong password many times.\n        :return:\n        '''\n        user = User(get_info_user(\"valid_mail\"), get_info_user(\"invalid_pwd\"))\n        soft_assert = SoftAssert()\n>       self.login_page.login_manytime(user, 5, soft_assert, get_message(\"login\",\"error_mail_pwd\"))\n\ntests\\test_login.py:57: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\login_page.py:26: in login_manytime\n    self.select_tab(TabName.LOGIN.value)\nbase\\base_page.py:41: in select_tab\n    Action(self.driver).click(xpath)\nutils\\actions.py:9: in click\n    self.scroll(xpath)\nutils\\actions.py:22: in scroll\n    element = self.driver.find_element(By.XPATH, xpath)\nC:\\Users\\ADMIN\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:738: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\nC:\\Users\\ADMIN\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000017FF11C2D90>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...07FF7694FE16F]\\\\n\\\\tBaseThreadInitThunk [0x00007FFA0949257D+29]\\\\n\\\\tRtlUserThreadStart [0x00007FFA0A60AF28+40]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//div[@id=\"menu\"]//li//a[span[text()='Login']]\"}\nE         (Session info: chrome=126.0.6478.127); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF76958EEA2+31554]\nE       \t(No symbol) [0x00007FF769507ED9]\nE       \t(No symbol) [0x00007FF7693C872A]\nE       \t(No symbol) [0x00007FF769418434]\nE       \t(No symbol) [0x00007FF76941853C]\nE       \t(No symbol) [0x00007FF76945F6A7]\nE       \t(No symbol) [0x00007FF76943D06F]\nE       \t(No symbol) [0x00007FF76945C977]\nE       \t(No symbol) [0x00007FF76943CDD3]\nE       \t(No symbol) [0x00007FF76940A33B]\nE       \t(No symbol) [0x00007FF76940AED1]\nE       \tGetHandleVerifier [0x00007FF769898B1D+3217341]\nE       \tGetHandleVerifier [0x00007FF7698E5AE3+3532675]\nE       \tGetHandleVerifier [0x00007FF7698DB0E0+3489152]\nE       \tGetHandleVerifier [0x00007FF76963E776+750614]\nE       \t(No symbol) [0x00007FF76951375F]\nE       \t(No symbol) [0x00007FF76950EB14]\nE       \t(No symbol) [0x00007FF76950ECA2]\nE       \t(No symbol) [0x00007FF7694FE16F]\nE       \tBaseThreadInitThunk [0x00007FFA0949257D+29]\nE       \tRtlUserThreadStart [0x00007FFA0A60AF28+40]\n\nC:\\Users\\ADMIN\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: NoSuchElementException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"setup_and_teardown","time":{"start":1721026663110,"stop":1721026667865,"duration":4755},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false},{"name":"classSetup","time":{"start":1721026670739,"stop":1721026670739,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false}],"testStage":{"description":"\n        System shows message when user enters wrong password many times.\n        :return:\n        ","status":"broken","statusMessage":"selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//div[@id=\"menu\"]//li//a[span[text()='Login']]\"}\n  (Session info: chrome=126.0.6478.127); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x00007FF76958EEA2+31554]\n\t(No symbol) [0x00007FF769507ED9]\n\t(No symbol) [0x00007FF7693C872A]\n\t(No symbol) [0x00007FF769418434]\n\t(No symbol) [0x00007FF76941853C]\n\t(No symbol) [0x00007FF76945F6A7]\n\t(No symbol) [0x00007FF76943D06F]\n\t(No symbol) [0x00007FF76945C977]\n\t(No symbol) [0x00007FF76943CDD3]\n\t(No symbol) [0x00007FF76940A33B]\n\t(No symbol) [0x00007FF76940AED1]\n\tGetHandleVerifier [0x00007FF769898B1D+3217341]\n\tGetHandleVerifier [0x00007FF7698E5AE3+3532675]\n\tGetHandleVerifier [0x00007FF7698DB0E0+3489152]\n\tGetHandleVerifier [0x00007FF76963E776+750614]\n\t(No symbol) [0x00007FF76951375F]\n\t(No symbol) [0x00007FF76950EB14]\n\t(No symbol) [0x00007FF76950ECA2]\n\t(No symbol) [0x00007FF7694FE16F]\n\tBaseThreadInitThunk [0x00007FFA0949257D+29]\n\tRtlUserThreadStart [0x00007FFA0A60AF28+40]","statusTrace":"self = <tests.test_login.TestLogin object at 0x0000017FF13E4C90>\n\n    def test_login_wrong_pws_manytime(self):\n        '''\n        System shows message when user enters wrong password many times.\n        :return:\n        '''\n        user = User(get_info_user(\"valid_mail\"), get_info_user(\"invalid_pwd\"))\n        soft_assert = SoftAssert()\n>       self.login_page.login_manytime(user, 5, soft_assert, get_message(\"login\",\"error_mail_pwd\"))\n\ntests\\test_login.py:57: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\login_page.py:26: in login_manytime\n    self.select_tab(TabName.LOGIN.value)\nbase\\base_page.py:41: in select_tab\n    Action(self.driver).click(xpath)\nutils\\actions.py:9: in click\n    self.scroll(xpath)\nutils\\actions.py:22: in scroll\n    element = self.driver.find_element(By.XPATH, xpath)\nC:\\Users\\ADMIN\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:738: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\nC:\\Users\\ADMIN\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000017FF11C2D90>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...07FF7694FE16F]\\\\n\\\\tBaseThreadInitThunk [0x00007FFA0949257D+29]\\\\n\\\\tRtlUserThreadStart [0x00007FFA0A60AF28+40]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//div[@id=\"menu\"]//li//a[span[text()='Login']]\"}\nE         (Session info: chrome=126.0.6478.127); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF76958EEA2+31554]\nE       \t(No symbol) [0x00007FF769507ED9]\nE       \t(No symbol) [0x00007FF7693C872A]\nE       \t(No symbol) [0x00007FF769418434]\nE       \t(No symbol) [0x00007FF76941853C]\nE       \t(No symbol) [0x00007FF76945F6A7]\nE       \t(No symbol) [0x00007FF76943D06F]\nE       \t(No symbol) [0x00007FF76945C977]\nE       \t(No symbol) [0x00007FF76943CDD3]\nE       \t(No symbol) [0x00007FF76940A33B]\nE       \t(No symbol) [0x00007FF76940AED1]\nE       \tGetHandleVerifier [0x00007FF769898B1D+3217341]\nE       \tGetHandleVerifier [0x00007FF7698E5AE3+3532675]\nE       \tGetHandleVerifier [0x00007FF7698DB0E0+3489152]\nE       \tGetHandleVerifier [0x00007FF76963E776+750614]\nE       \t(No symbol) [0x00007FF76951375F]\nE       \t(No symbol) [0x00007FF76950EB14]\nE       \t(No symbol) [0x00007FF76950ECA2]\nE       \t(No symbol) [0x00007FF7694FE16F]\nE       \tBaseThreadInitThunk [0x00007FFA0949257D+29]\nE       \tRtlUserThreadStart [0x00007FFA0A60AF28+40]\n\nC:\\Users\\ADMIN\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: NoSuchElementException","steps":[],"attachments":[{"uid":"efbe54b707f65eac","name":"screenshot","source":"efbe54b707f65eac.png","type":"image/png","size":988106}],"parameters":[],"stepsCount":0,"attachmentStep":false,"shouldDisplayMessage":true,"attachmentsCount":1,"hasContent":true},"afterStages":[{"name":"setup_and_teardown::0","time":{"start":1721026677929,"stop":1721026680216,"duration":2287},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"tag","value":"@pytest.mark.usefixtures('setup_and_teardown')"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_login"},{"name":"subSuite","value":"TestLogin"},{"name":"host","value":"DUYEN"},{"name":"thread","value":"20004-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_login"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["@pytest.mark.usefixtures('setup_and_teardown')"]},"source":"b2a128f9645f00e0.json","parameterValues":[]}